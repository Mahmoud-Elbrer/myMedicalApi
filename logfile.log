{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"kind":"Number","level":"error","message":"Cast to Number failed for value \"khalid@gmail.com\" (type string) at path \"phoneNumber\" for model \"Doctor\" Cast to Number failed for value \"khalid@gmail.com\" (type string) at path \"phoneNumber\" for model \"Doctor\"","path":"phoneNumber","reason":{"actual":false,"code":"ERR_ASSERTION","expected":true,"generatedMessage":true,"operator":"=="},"stack":"CastError: Cast to Number failed for value \"khalid@gmail.com\" (type string) at path \"phoneNumber\" for model \"Doctor\"\n    at model.Query.exec (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\query.js:4546:21)\n    at model.Query.Query.then (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\query.js:4645:15)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","stringValue":"\"khalid@gmail.com\"","value":"khalid@gmail.com","valueType":"string"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"error","message":"doctor.generateAuthToken is not a function doctor.generateAuthToken is not a function","stack":"TypeError: doctor.generateAuthToken is not a function\n    at exports.signUp (D:\\nodeJs Project\\medical-app\\src\\controller\\auth_doctor.js:69:24)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"code":11000,"index":0,"keyPattern":{"email":1},"keyValue":{"email":"a1@gmail.com"},"level":"error","message":"E11000 duplicate key error collection: medicalDB.doctors index: email_1 dup key: { email: \"a1@gmail.com\" } E11000 duplicate key error collection: medicalDB.doctors index: email_1 dup key: { email: \"a1@gmail.com\" }","stack":"MongoServerError: E11000 duplicate key error collection: medicalDB.doctors index: email_1 dup key: { email: \"a1@gmail.com\" }\n    at D:\\nodeJs Project\\medical-app\\node_modules\\mongodb\\lib\\operations\\insert.js:51:33\n    at D:\\nodeJs Project\\medical-app\\node_modules\\mongodb\\lib\\cmap\\connection_pool.js:272:25\n    at handleOperationResult (D:\\nodeJs Project\\medical-app\\node_modules\\mongodb\\lib\\sdam\\server.js:363:9)\n    at MessageStream.messageHandler (D:\\nodeJs Project\\medical-app\\node_modules\\mongodb\\lib\\cmap\\connection.js:479:9)\n    at MessageStream.emit (events.js:400:28)\n    at processIncomingData (D:\\nodeJs Project\\medical-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:108:16)\n    at MessageStream._write (D:\\nodeJs Project\\medical-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:28:9)\n    at writeOrBuffer (internal/streams/writable.js:358:12)\n    at MessageStream.Writable.write (internal/streams/writable.js:303:10)\n    at Socket.ondata (internal/streams/readable.js:726:22)"}
{"code":11000,"index":0,"keyPattern":{"email":1},"keyValue":{"email":"a1@gmail.com"},"level":"error","message":"E11000 duplicate key error collection: medicalDB.doctors index: email_1 dup key: { email: \"a1@gmail.com\" } E11000 duplicate key error collection: medicalDB.doctors index: email_1 dup key: { email: \"a1@gmail.com\" }","stack":"MongoServerError: E11000 duplicate key error collection: medicalDB.doctors index: email_1 dup key: { email: \"a1@gmail.com\" }\n    at D:\\nodeJs Project\\medical-app\\node_modules\\mongodb\\lib\\operations\\insert.js:51:33\n    at D:\\nodeJs Project\\medical-app\\node_modules\\mongodb\\lib\\cmap\\connection_pool.js:272:25\n    at handleOperationResult (D:\\nodeJs Project\\medical-app\\node_modules\\mongodb\\lib\\sdam\\server.js:363:9)\n    at MessageStream.messageHandler (D:\\nodeJs Project\\medical-app\\node_modules\\mongodb\\lib\\cmap\\connection.js:479:9)\n    at MessageStream.emit (events.js:400:28)\n    at processIncomingData (D:\\nodeJs Project\\medical-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:108:16)\n    at MessageStream._write (D:\\nodeJs Project\\medical-app\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:28:9)\n    at writeOrBuffer (internal/streams/writable.js:358:12)\n    at MessageStream.Writable.write (internal/streams/writable.js:303:10)\n    at Socket.ondata (internal/streams/readable.js:726:22)"}
{"level":"error","message":"doctor.generateAuthToken is not a function doctor.generateAuthToken is not a function","stack":"TypeError: doctor.generateAuthToken is not a function\n    at exports.signUp (D:\\nodeJs Project\\medical-app\\src\\controller\\auth_doctor.js:69:24)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"error","message":"token is not defined token is not defined","stack":"ReferenceError: token is not defined\n    at exports.signUp (D:\\nodeJs Project\\medical-app\\src\\controller\\auth_doctor.js:72:29)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"error","message":"doctor.generateAuthToken is not a function doctor.generateAuthToken is not a function","stack":"TypeError: doctor.generateAuthToken is not a function\n    at exports.signUp (D:\\nodeJs Project\\medical-app\\src\\controller\\auth_doctor.js:69:24)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"error","message":"Doctor.generateAuthToken is not a function Doctor.generateAuthToken is not a function","stack":"TypeError: Doctor.generateAuthToken is not a function\n    at exports.signUp (D:\\nodeJs Project\\medical-app\\src\\controller\\auth_doctor.js:69:24)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"error","message":"jwt is not defined jwt is not defined","stack":"ReferenceError: jwt is not defined\n    at model.doctorSchema.methods.generateAuthToken (D:\\nodeJs Project\\medical-app\\src\\models\\doctor.js:87:17)\n    at exports.signUp (D:\\nodeJs Project\\medical-app\\src\\controller\\auth_doctor.js:69:24)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"error","message":"Cannot populate path `user` because it is not in your schema. Set the `strictPopulate` option to false to override. Cannot populate path `user` because it is not in your schema. Set the `strictPopulate` option to false to override.","stack":"MongooseError: Cannot populate path `user` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:47:12)\n    at populate (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\model.js:4447:21)\n    at _populate (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\model.js:4418:5)\n    at D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\model.js:4395:5\n    at promiseOrCallback (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\helpers\\promiseOrCallback.js:10:12)\n    at Mongoose._promiseOrCallback (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\index.js:1153:10)\n    at Function.Model.populate (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\model.js:4393:23)\n    at D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\query.js:2136:19\n    at D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\helpers\\query\\completeMany.js:36:32\n    at processTicksAndRejections (internal/process/task_queues.js:77:11)"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"error","message":"Cannot populate path `doctor` because it is not in your schema. Set the `strictPopulate` option to false to override. Cannot populate path `doctor` because it is not in your schema. Set the `strictPopulate` option to false to override.","stack":"MongooseError: Cannot populate path `doctor` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:47:12)\n    at populate (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\model.js:4447:21)\n    at _populate (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\model.js:4418:5)\n    at D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\model.js:4395:5\n    at promiseOrCallback (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\helpers\\promiseOrCallback.js:10:12)\n    at Mongoose._promiseOrCallback (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\index.js:1153:10)\n    at Function.Model.populate (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\model.js:4393:23)\n    at D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\query.js:2136:19\n    at D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\helpers\\query\\completeMany.js:36:32\n    at processTicksAndRejections (internal/process/task_queues.js:77:11)"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"error","message":"Cannot populate path `doctor` because it is not in your schema. Set the `strictPopulate` option to false to override. Cannot populate path `doctor` because it is not in your schema. Set the `strictPopulate` option to false to override.","stack":"MongooseError: Cannot populate path `doctor` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:47:12)\n    at populate (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\model.js:4447:21)\n    at _populate (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\model.js:4418:5)\n    at D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\model.js:4395:5\n    at promiseOrCallback (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\helpers\\promiseOrCallback.js:10:12)\n    at Mongoose._promiseOrCallback (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\index.js:1153:10)\n    at Function.Model.populate (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\model.js:4393:23)\n    at D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\query.js:2136:19\n    at D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\helpers\\query\\completeMany.js:36:32\n    at processTicksAndRejections (internal/process/task_queues.js:77:11)"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"error","message":"Cannot populate path `doctor` because it is not in your schema. Set the `strictPopulate` option to false to override. Cannot populate path `doctor` because it is not in your schema. Set the `strictPopulate` option to false to override.","stack":"MongooseError: Cannot populate path `doctor` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:47:12)\n    at populate (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\model.js:4447:21)\n    at _populate (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\model.js:4418:5)\n    at D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\model.js:4395:5\n    at promiseOrCallback (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\helpers\\promiseOrCallback.js:10:12)\n    at Mongoose._promiseOrCallback (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\index.js:1153:10)\n    at Function.Model.populate (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\model.js:4393:23)\n    at D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\query.js:2136:19\n    at D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\helpers\\query\\completeMany.js:36:32\n    at processTicksAndRejections (internal/process/task_queues.js:77:11)"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"_message":"TimeTable validation failed","errors":{"doctor":{"kind":"ObjectId","message":"Cast to ObjectId failed for value \"Bay\" (type string) at path \"doctor\"","name":"CastError","path":"doctor","reason":{},"stringValue":"\"Bay\"","value":"Bay","valueType":"string"}},"level":"error","message":"TimeTable validation failed: doctor: Cast to ObjectId failed for value \"Bay\" (type string) at path \"doctor\" TimeTable validation failed: doctor: Cast to ObjectId failed for value \"Bay\" (type string) at path \"doctor\"","stack":"ValidationError: TimeTable validation failed: doctor: Cast to ObjectId failed for value \"Bay\" (type string) at path \"doctor\"\n    at model.Document.invalidate (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\document.js:2910:32)\n    at model.$set (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\document.js:1447:12)\n    at model.$set (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\document.js:1149:16)\n    at model.Document (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\document.js:158:12)\n    at model.Model (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\model.js:106:12)\n    at new model (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\model.js:4765:15)\n    at model (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\model.js:4760:16)\n    at exports.addTimeTable (D:\\nodeJs Project\\medical-app\\src\\controller\\timetable.js:18:21)\n    at newFn (D:\\nodeJs Project\\medical-app\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\nodeJs Project\\medical-app\\node_modules\\express\\lib\\router\\layer.js:95:5)"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"error","message":"Cannot populate path `Doctor` because it is not in your schema. Set the `strictPopulate` option to false to override. Cannot populate path `Doctor` because it is not in your schema. Set the `strictPopulate` option to false to override.","stack":"MongooseError: Cannot populate path `Doctor` because it is not in your schema. Set the `strictPopulate` option to false to override.\n    at getModelsMapForPopulate (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:47:12)\n    at populate (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\model.js:4447:21)\n    at _populate (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\model.js:4418:5)\n    at D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\model.js:4395:5\n    at promiseOrCallback (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\helpers\\promiseOrCallback.js:10:12)\n    at Mongoose._promiseOrCallback (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\index.js:1153:10)\n    at Function.Model.populate (D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\model.js:4393:23)\n    at D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\query.js:2136:19\n    at D:\\nodeJs Project\\medical-app\\node_modules\\mongoose\\lib\\helpers\\query\\completeMany.js:36:32\n    at processTicksAndRejections (internal/process/task_queues.js:77:11)"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
{"level":"info","message":"Connection to MongoDB .. class MongooseError extends Error { }"}
